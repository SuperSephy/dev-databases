# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.provider "virtualbox" do |v|
    v.name = "ims-db-migrations"
  end
  
  # Precise64 uses ubuntu 12.04, RabbitMQ now has minimum of 14.04
  #config.vm.box = "precise64"
  #config.vm.box_url = "http://files.vagrantup.com/precise64.box"

  config.vm.box     = "bento/ubuntu-16.04"

  config.vm.synced_folder ".", "/vagrant", :mount_options => ["dmode=777", "fmode=666"]
  config.vm.network "private_network", ip: "33.33.33.10"

  # --------------------- Database Configs -------------------------
    # Mongo DB
    mongo_version         = "3"    # Options: 2.6 | 3 - 3 preferable
    mongo_enable_remote   = "true"   # remote access enabled when true

  # --------------------- Get Dependencies --------------------------
  
    # To reduce repetitive apt-update calls, consolidated repository checks here
    config.vm.provision :shell, :path => "_install/_dependencies.sh", args: [mongo_version]
   
  # --------------------- Database Set Up ---------------------------
  
    # MySQL
    config.vm.network :forwarded_port, guest: 3306, host: 3306
    config.vm.provision :shell, :path => "_install/mysql.sh"

    # Mongo DB
	  # Provision MongoDB, set up users, and expose ports
    config.vm.network :forwarded_port, guest: 27017, host: 27017
    config.vm.provision :shell, :path => "_install/mongo.sh", args: [mongo_enable_remote]

    # RabbitMQ
    config.vm.network :forwarded_port, guest: 5672, host: 5672      # DB
    config.vm.network :forwarded_port, guest: 15672, host: 15672    # Management Panel
    config.vm.provision :shell, :path => "_install/rabbitMQ.sh"

    # Provision Redis (without journaling and with persistence)
    config.vm.network :forwarded_port, guest: 6379, host: 6379
    config.vm.provision :shell, :path => "_install/redis.sh", args: "persistent"
    # NOTE: It is safe to run this to add persistence even if originally provisioned without persistence

    # Elasticsearch
    config.vm.network :forwarded_port, guest: 9200, host: 9200
    config.vm.provision :shell, :path => "_install/elasticsearch.sh"

    # EventStore
    config.vm.network "forwarded_port", guest: 1113, host: 1113
    config.vm.network "forwarded_port", guest: 2113, host: 2113
    config.vm.provision :shell, :path => "_install/eventStore.sh"
    
end
